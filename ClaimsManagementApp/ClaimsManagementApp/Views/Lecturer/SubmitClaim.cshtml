@model Claim
@{
    ViewData["Title"] = "Submit Claim";
}

<div class="container">
    <h2>Submit New Claim</h2>

    <form asp-action="SubmitClaim" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-md-6">
                <div class="mb-3">
                    <label asp-for="LecturerName" class="form-label">Lecturer Name *</label>
                    <input asp-for="LecturerName" class="form-control" required />
                    <span asp-validation-for="LecturerName" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="HoursWorked" class="form-label">Hours Worked *</label>
                    <input asp-for="HoursWorked" type="number" step="0.5" class="form-control" required />
                    <span asp-validation-for="HoursWorked" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="HourlyRate" class="form-label">Hourly Rate (R) *</label>
                    <input asp-for="HourlyRate" type="number" step="0.01" class="form-control" required />
                    <span asp-validation-for="HourlyRate" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="AdditionalNotes" class="form-label">Additional Notes</label>
                    <textarea asp-for="AdditionalNotes" class="form-control" rows="4"></textarea>
                </div>
            </div>

            <div class="col-md-6">
                <div class="mb-3">
                    <label class="form-label">Supporting Documents</label>
                    <input type="file" name="documents" multiple class="form-control"
                           accept=".pdf,.docx,.xlsx" />
                    <small class="form-text text-muted">
                        Allowed file types: PDF, DOCX, XLSX. Maximum file size: 5MB
                    </small>
                    <div id="fileNames" class="mt-2"></div>
                </div>

                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">Claim Summary</h5>
                    </div>
                    <div class="card-body">
                        <p><strong>Hours Worked:</strong> <span id="summaryHours">0</span></p>
                        <p><strong>Hourly Rate:</strong> R <span id="summaryRate">0</span></p>
                        <p><strong>Total Amount:</strong> R <span id="summaryTotal">0</span></p>
                    </div>
                </div>
            </div>
        </div>

        <div class="mt-4">
            <button type="submit" class="btn btn-success btn-lg">
                <i class="fas fa-paper-plane"></i> Submit Claim
            </button>
            <a href="@Url.Action("Index")" class="btn btn-secondary">Cancel</a>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        // Real-time calculation
        document.getElementById('HoursWorked').addEventListener('input', updateSummary);
        document.getElementById('HourlyRate').addEventListener('input', updateSummary);

        function updateSummary() {
            const hours = parseFloat(document.getElementById('HoursWorked').value) || 0;
            const rate = parseFloat(document.getElementById('HourlyRate').value) || 0;
            const total = hours * rate;

            document.getElementById('summaryHours').textContent = hours;
            document.getElementById('summaryRate').textContent = rate.toFixed(2);
            document.getElementById('summaryTotal').textContent = total.toFixed(2);
        }

        // File name display
        document.querySelector('input[type="file"]').addEventListener('change', function(e) {
            const fileNamesDiv = document.getElementById('fileNames');
            fileNamesDiv.innerHTML = '';

            Array.from(e.target.files).forEach(file => {
                const fileBadge = document.createElement('span');
                fileBadge.className = 'badge bg-primary me-2 mb-2';
                fileBadge.textContent = file.name;
                fileNamesDiv.appendChild(fileBadge);
            });
        });

        // Form validation
        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }
                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
}